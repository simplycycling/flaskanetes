name: CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2
  AWS_ACCOUNT_ID: 650251696513
  ECR_REPOSITORY: flaskanetes
  EKS_CLUSTER: flaskanetes-dev
  KUBERNETES_NAMESPACE: flaskanetes

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}
        
      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Create namespace if it doesn't exist
          kubectl create namespace ${{ env.KUBERNETES_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
          
          # Update the deployment with the new image
          kubectl set image deployment/flaskanetes \
            flaskanetes=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -n ${{ env.KUBERNETES_NAMESPACE }}
            
          # Wait for rollout to complete
          kubectl rollout status deployment/flaskanetes -n ${{ env.KUBERNETES_NAMESPACE }} 